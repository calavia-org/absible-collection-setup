name: Test collection

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

on:
  pull_request:
    branches: [main]
  workflow_dispatch:

jobs:
  tox-matrix:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.head.ref }}
          repository: ${{ github.event.pull_request.head.repo.full_name }}

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install tox-ansible, includes tox
        run: python3 -m pip install tox-ansible

      - name: Generate unit-tests matrix
        id: unit-matrix
        run: |
          python3 -m tox --ansible --gh-matrix --matrix-scope unit --conf tox-ansible.ini

      - name: Generate integration-tests matrix
        id: integration-matrix
        run: |
          python3 -m tox --ansible --gh-matrix --matrix-scope integration --conf tox-ansible.ini

    outputs:
      unitEnvList: ${{ steps.unit-matrix.outputs.envlist }}
      integrationEnvList: ${{ steps.integreation-matrix.outputs.envlist }}

  unit_test:
    needs: tox-matrix
    strategy:
      fail-fast: false
      matrix:
        entry: ${{ fromJson(needs.tox-matrix.outputs.unitEnvList) }}
    name: ${{ matrix.entry.name }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.head.sha }}
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.entry.python }}

      - name: Install tox-ansible, includes tox
        run: python3 -m pip install tox-ansible

      - name: Run tox test
        run: >-
          python3 -m tox
          --ansible
          -e ${{ matrix.entry.name }}
          --conf tox-ansible.ini
          --
          --show-capture=all
          --cov=unit
          --cov-report=xml
          --junit-xml=test/reports/unit-${{ matrix.entry.name }}.xml
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Create test summary
        uses: mikepenz/action-junit-report@v4
        with:
          report_paths: test/reports/unit-*.xml
        if: always()

  integration_test:
    needs: tox-matrix
    strategy:
      fail-fast: false
      matrix:
        entry: ${{ fromJson(needs.tox-matrix.outputs.unitEnvList) }}
    name: ${{ matrix.entry.name }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.head.sha }}
          fetch-depth: 0
      
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.entry.python }}
      
      - name: Install tox-ansible, includes tox
        run: python3 -m pip install tox-ansible
      
      - name: Run tox test
        run: >-
          python3 -m tox
          --ansible
          -e ${{ matrix.entry.name }}
          --conf tox-ansible.ini
          --
          --show-capture=all
          --junit-xml=test/reports/integration-${{ matrix.entry.name }}.xml
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Create test summary
        uses: mikepenz/action-junit-report@v4
        with:
          report_paths: test/reports/unit-*.xml
        if: always()

  test_passed:
    needs: unit_test, integration_test
    runs-on: ubuntu-latest
    steps:
      - run: python -c "assert set(['${{ needs.unit_test.result }}',  ${{ needs.integration_test.result }}]) == {'success'}"
